/*
 * This file is generated by jOOQ.
 */
package db.tables.records;


import db.tables.GammaToDelta;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GammaToDeltaRecord extends UpdatableRecordImpl<GammaToDeltaRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -1929592099;

    /**
     * Setter for <code>public.gamma_to_delta.gamma_id</code>.
     */
    public void setGammaId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.gamma_to_delta.gamma_id</code>.
     */
    public Long getGammaId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.gamma_to_delta.delta_id</code>.
     */
    public void setDeltaId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.gamma_to_delta.delta_id</code>.
     */
    public Long getDeltaId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return GammaToDelta.GAMMA_TO_DELTA.GAMMA_ID;
    }

    @Override
    public Field<Long> field2() {
        return GammaToDelta.GAMMA_TO_DELTA.DELTA_ID;
    }

    @Override
    public Long component1() {
        return getGammaId();
    }

    @Override
    public Long component2() {
        return getDeltaId();
    }

    @Override
    public Long value1() {
        return getGammaId();
    }

    @Override
    public Long value2() {
        return getDeltaId();
    }

    @Override
    public GammaToDeltaRecord value1(Long value) {
        setGammaId(value);
        return this;
    }

    @Override
    public GammaToDeltaRecord value2(Long value) {
        setDeltaId(value);
        return this;
    }

    @Override
    public GammaToDeltaRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GammaToDeltaRecord
     */
    public GammaToDeltaRecord() {
        super(GammaToDelta.GAMMA_TO_DELTA);
    }

    /**
     * Create a detached, initialised GammaToDeltaRecord
     */
    public GammaToDeltaRecord(Long gammaId, Long deltaId) {
        super(GammaToDelta.GAMMA_TO_DELTA);

        set(0, gammaId);
        set(1, deltaId);
    }
}
