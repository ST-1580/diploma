/*
 * This file is generated by jOOQ.
 */
package com.st1580.diploma.db.tables.records;


import com.st1580.diploma.db.tables.Gamma;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GammaRecord extends UpdatableRecordImpl<GammaRecord> implements Record4<Long, Boolean, String, Long> {

    private static final long serialVersionUID = -1974730104;

    /**
     * Setter for <code>public.gamma.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.gamma.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.gamma.is_master</code>.
     */
    public void setIsMaster(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.gamma.is_master</code>.
     */
    public Boolean getIsMaster() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.gamma.active_status</code>.
     */
    public void setActiveStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.gamma.active_status</code>.
     */
    public String getActiveStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.gamma.created_ts</code>.
     */
    public void setCreatedTs(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.gamma.created_ts</code>.
     */
    public Long getCreatedTs() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Boolean, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Boolean, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Gamma.GAMMA.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Gamma.GAMMA.IS_MASTER;
    }

    @Override
    public Field<String> field3() {
        return Gamma.GAMMA.ACTIVE_STATUS;
    }

    @Override
    public Field<Long> field4() {
        return Gamma.GAMMA.CREATED_TS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getIsMaster();
    }

    @Override
    public String component3() {
        return getActiveStatus();
    }

    @Override
    public Long component4() {
        return getCreatedTs();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getIsMaster();
    }

    @Override
    public String value3() {
        return getActiveStatus();
    }

    @Override
    public Long value4() {
        return getCreatedTs();
    }

    @Override
    public GammaRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GammaRecord value2(Boolean value) {
        setIsMaster(value);
        return this;
    }

    @Override
    public GammaRecord value3(String value) {
        setActiveStatus(value);
        return this;
    }

    @Override
    public GammaRecord value4(Long value) {
        setCreatedTs(value);
        return this;
    }

    @Override
    public GammaRecord values(Long value1, Boolean value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GammaRecord
     */
    public GammaRecord() {
        super(Gamma.GAMMA);
    }

    /**
     * Create a detached, initialised GammaRecord
     */
    public GammaRecord(Long id, Boolean isMaster, String activeStatus, Long createdTs) {
        super(Gamma.GAMMA);

        set(0, id);
        set(1, isMaster);
        set(2, activeStatus);
        set(3, createdTs);
    }
}
