/*
 * This file is generated by jOOQ.
 */
package com.st1580.diploma.db.tables.records;


import com.st1580.diploma.db.tables.Alpha;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AlphaRecord extends UpdatableRecordImpl<AlphaRecord> implements Record4<Long, String, String, Long> {

    private static final long serialVersionUID = 911992213;

    /**
     * Setter for <code>public.alpha.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.alpha.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.alpha.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.alpha.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.alpha.is_active</code>.
     */
    public void setIsActive(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.alpha.is_active</code>.
     */
    public String getIsActive() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.alpha.created_ts</code>.
     */
    public void setCreatedTs(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.alpha.created_ts</code>.
     */
    public Long getCreatedTs() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Alpha.ALPHA.ID;
    }

    @Override
    public Field<String> field2() {
        return Alpha.ALPHA.NAME;
    }

    @Override
    public Field<String> field3() {
        return Alpha.ALPHA.IS_ACTIVE;
    }

    @Override
    public Field<Long> field4() {
        return Alpha.ALPHA.CREATED_TS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getIsActive();
    }

    @Override
    public Long component4() {
        return getCreatedTs();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getIsActive();
    }

    @Override
    public Long value4() {
        return getCreatedTs();
    }

    @Override
    public AlphaRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AlphaRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AlphaRecord value3(String value) {
        setIsActive(value);
        return this;
    }

    @Override
    public AlphaRecord value4(Long value) {
        setCreatedTs(value);
        return this;
    }

    @Override
    public AlphaRecord values(Long value1, String value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AlphaRecord
     */
    public AlphaRecord() {
        super(Alpha.ALPHA);
    }

    /**
     * Create a detached, initialised AlphaRecord
     */
    public AlphaRecord(Long id, String name, String isActive, Long createdTs) {
        super(Alpha.ALPHA);

        set(0, id);
        set(1, name);
        set(2, isActive);
        set(3, createdTs);
    }
}
